import{a as i,o as u,e as h,y as n,u as t,t as a,q as s,z as r}from"./runtime-core.esm-bundler-753bcc58.js";const d={class:"markdown-body"},_={class:"tip hint"},f={class:"hint-title"},g=t("strong",null,"Directus Version:",-1),m=t("h2",{id:"explanation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#explanation"},"#"),s(" Explanation")],-1),y=t("p",null,"In some cases, you may want to take text from a title or other source and slugify it. Here’s how you can implement this in a flow. Keep in mind, slugification methods can get quite complex. This recipe is intended for basic, everyday English text.",-1),w=t("h2",{id:"the-recipe",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#the-recipe"},"#"),s(" The Recipe")],-1),x={class:"tip hint"},j=t("div",{class:"hint-title"},"Requirements",-1),v=t("li",null,"Paste the following function into your Run Script operation.",-1),k=t("pre",null,[t("code",{class:"language-js"},[t("span",{class:"hljs-variable language_"},"module"),s("."),t("span",{class:"hljs-property"},"exports"),s(" = "),t("span",{class:"hljs-keyword"},"async"),s(),t("span",{class:"hljs-keyword"},"function"),s(" ("),t("span",{class:"hljs-params"},"data"),s(`) {
	`),t("span",{class:"hljs-comment"},"// Index data to get the string you want to slugify"),s(`
	`),t("span",{class:"hljs-comment"},'// Assign it to the "text" var below.'),s(`
	`),t("span",{class:"hljs-keyword"},"const"),s(" text = data."),t("span",{class:"hljs-property"},"opKey"),s("."),t("span",{class:"hljs-property"},"nested_value"),s(`;

	`),t("span",{class:"hljs-keyword"},"const"),s(` slug = text
		.`),t("span",{class:"hljs-title function_"},"toLowerCase"),s(`()
		.`),t("span",{class:"hljs-title function_"},"trim"),s(`()
		.`),t("span",{class:"hljs-title function_"},"replace"),s("("),t("span",{class:"hljs-regexp"},"/[^\\w\\s-]/g"),s(", "),t("span",{class:"hljs-string"},"''"),s(`)
		.`),t("span",{class:"hljs-title function_"},"replace"),s("("),t("span",{class:"hljs-regexp"},"/[\\s_-]+/g"),s(", "),t("span",{class:"hljs-string"},"'-'"),s(`)
		.`),t("span",{class:"hljs-title function_"},"replace"),s("("),t("span",{class:"hljs-regexp"},"/^-+|-+$/g"),s(", "),t("span",{class:"hljs-string"},"''"),s(`);

	`),t("span",{class:"hljs-keyword"},"return"),s(` slug;
};
`)])],-1),b=t("h2",{id:"final-tips",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#final-tips"},"#"),s(" Final Tips")],-1),S=t("p",null,[s("Remember, the returned value doesn’t need to be a string. You can append any valid JSON onto the data chain. You could take in an array of strings, slugify all of them, push each to a new array, and append it onto the data chain… "),t("em",null,"or whatever your use-case calls for!")],-1),q="Slugify Text",A=!1,C="A simple recipe to slugify a string of text using the Run Script operation.",N=[],V=null,$="9.18.1",B=null,P="Eron Powell",Y={__name:"slugify-text-with-run-script",setup(R,{expose:c}){const o={title:"Slugify Text",modularExtension:!1,description:"A simple recipe to slugify a string of text using the Run Script operation.",tags:[],skill_level:null,directus_version:"9.18.1",author_override:null,author:"Eron Powell"};return c({frontmatter:o}),(e,E)=>{const l=i("router-link"),p=i("docs-wrapper");return u(),h(p,{frontmatter:o},{default:n(()=>[t("div",d,[t("blockquote",null,[t("p",null,a(e.$frontmatter.description),1)]),t("div",_,[t("div",f,"Author: "+a(e.$frontmatter.author),1),t("p",null,[g,s(" "+a(e.$frontmatter.directus_version),1)])]),m,y,w,t("div",x,[j,t("p",null,[s("You’ll need a string somewhere in your "),r(l,{to:"/docs/configuration/flows.md#data-chains"},{default:n(()=>[s("data chain")]),_:1}),s(".")])]),t("ol",null,[t("li",null,[s("Create a "),r(l,{to:"/docs/configuration/flows/operations.md#run-script"},{default:n(()=>[s("Run Script")]),_:1}),s(" operation in your flow.")]),v]),k,b,S])]),_:1})}}};export{P as author,B as author_override,Y as default,C as description,$ as directus_version,A as modularExtension,V as skill_level,N as tags,q as title};
